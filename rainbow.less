// 				Imports
// ------------------------------------

// 			Mixins
@import "components/mixins.less";
//  		Reset
@import "components/reset.less";



// =============================================
//					Variables
// =============================================

// 					Colors
// ----------------------------------------

// 		Grays
@black:             #000;
@grayDarker:        #222;
@grayDark:          #333;
@gray:              #555;
@grayLight:         #999;
@grayLighter:       #eee;
@white:             #fff;

// 	   Accent colors
@red:				#F00;
@cyan:				#0FF;
@blue:				#00F;
@darkblue:			#00A;
@lightblue:			#ADE;
@purple:			#808;
@yellow:			#FF0;
@lime:				#0F0;
@magenta:			#F0F;
@silver:			#CCC;
@orange:			#FA0;
@brown:				#A22;
@maroon:			#800;
@green:				#080;
@olive:				#880;

// Backgrounds color
@redBackground:				lighten(@red, 45%);
@blueBackground:			lighten(@blue, 45%);
@purpleBackground:			lighten(@purple, 65%);
@yellowBackground:			lighten(@yellow, 40%);
@greenBackground:			lighten(@green, 65%);

// Tables colors
@tableBackground: 			transparent;
@tableBackgroundAccent: 	#F9F9F9;
@tableBackgroundHover: 		#F0F0EE;
@tableBorderColor: 			#CECECE;


// 			Base
@bodyBackgroundColor: 		@white;
@textColor:					@grayDark;
@LinkColor:					#28F;

@codeLightBackgroundColor: 		darken(@bodyBackgroundColor, 5%);
@codeLightColor: 				lighten(@textColor, 10%);
@codeDarkBackgroundColor: 		@grayDarker;
@codeDarkColor: 				@grayLighter;
@codeBorderColor: 				lighten(@grayLight, 20%);




@baseFontFamily:  		Arial, "Helvetica Neue", Helvetica, sans-serif;
@monoFontFamily: 		Monaco, "Courier New", Menlo, Consolas, monospace;
@baseFontSize: 			14px;
@codeFontSize: 			@baseFontSize - 2px;

@baseLineHeight: 		20px;
@halfLineHeight: 		@baseLineHeight/2;

@headingsFontFamily: 	inherit;
@headingsFontWeight: 	bold;
@headingsColor: 		inherit;

@h1FontSize: 			@baseFontSize * 2.75;
@h2FontSize: 			@baseFontSize * 2.25;
@h3FontSize: 			@baseFontSize * 1.75;
@h4FontSize: 			@baseFontSize * 1.25;
@h5FontSize: 			@baseFontSize;
@h6FontSize: 			@baseFontSize * 0.85;

@baseBorderRadius:		4px;
@largeBorderRadius:		6px;
@smallBorderRadius: 	3px;
@miniBorderRadius:		@smallBorderRadius;

// 				Forms
// ------------------------------

// Inputs
@inputBackground: 				fadeout(darken(@white, 5%), 25%);
@inputDisabledBackground: 		#DFDFDF;
@inputBorder: 					#ccc;
@placeholderText: 				@grayLight;

@inputHeight: 					@baseLineHeight + 14px;
@inputBorderRadius: 			@baseBorderRadius;




// 					  Grid
// ---------------------------------------------

@gridColumns: 			12;
@gridColumnWidth:		60px;
@gridGutterWidth:		20px;
@gridWidth: 			(@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

@fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridWidth);
@fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridWidth);

// =============================================
// 					  Base
// =============================================

body {
	font-family: @baseFontFamily;
	font-size: @baseFontSize;
	line-height: @baseLineHeight;
	color: @textColor;
	margin: 0;
	background-color: @bodyBackgroundColor;

	a {
		color: @LinkColor;
		text-decoration: none;

		&:hover,
		&:focus {
			color: darken(@LinkColor, 5%);	
			text-decoration: underline;
		}
	}

	&.red 			{ .linkColor(@red);}
	&.cyan 			{ .linkColor(@cyan);}
	&.blue 			{ .linkColor(@blue);}
	&.darkblue 		{ .linkColor(@darkblue);}
	&.lightblue 	{ .linkColor(@lightblue);}
	&.purple 		{ .linkColor(@purple);}
	&.yellow 		{ .linkColor(@yellow);}
	&.lime 			{ .linkColor(@lime);}
	&.magenta 		{ .linkColor(@magenta);}
	&.green 		{ .linkColor(@green);}
	&.olive 		{ .linkColor(@olive);}
	&.silver 		{ .linkColor(@silver);}
	&.orange 		{ .linkColor(@orange);}
	&.brown 		{ .linkColor(@brown);}
	&.maroon 		{ .linkColor(@maroon);}
}

.container {
	.clearfix();
	.center();
}

.fluid-container {
	.clearfix();
	padding: 0 @gridGutterWidth;
}


// =============================================
// 					  Grid
// =============================================

.grid {
	.clearfix();
	margin: 0 auto;
	width: @gridWidth;
}

.row {
	.clearfix();
	margin-top: @gridGutterWidth;

	&:first-child {
		margin-top: 0;
	}

	> [class^='span'] {
		float: left;
		margin-left: @gridGutterWidth;

		&:first-child {
			margin-left: 0;
		}
	}
		
	.span (@columns: 1) {
		background-color: #777;	
     	width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }

    .spanX (@index: @gridColumns) when (@index > 0) {
    	.span@{index} {.span(@index);}
    	.spanX(@index - 1);
    }
	.spanX();
	
    &.fluid {
    	.clearfix();
    	width: 100%;
		float: left;
		[class^='span'] {
			margin-left: @fluidGridGutterWidth;
        	*margin-left: @fluidGridGutterWidth - (.5 / @gridWidth * 100 * 1%);

        	&:first-child {
        		margin-left: 0;
        	}
		}
		
		.span (@columns: 1) {
			width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
      		*width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridWidth * 100 * 1%);
		}

		.spanX (@index: @gridColumns) when (@index > 0) {
    		.span@{index} {.span(@index);}
    		.spanX(@index - 1);
   		 }
		.spanX();	
    }
}

// =============================================
// 					 Images
// =============================================

img {
	&.border {
		padding: 4px;
		background-color: @white;
		border: 1px solid @grayLight;
		.box-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
	}
	&.rounded {
		.rounded(@baseBorderRadius);
	}
	&.circle {
		.rounded(50%);
	}
}

// =============================================
// 					Typography
// =============================================

p {
	margin-bottom: @halfLineHeight;
}

small 	{ font-size: 85%;}
strong 	{font-weight: bold;}
em 		{ font-style: italic;}
cite 	{ font-style: normal;}

.headline {
	font-size: @baseFontSize * 1.5;
	font-weight: 200;
	line-height: @baseLineHeight * 1.5;
	margin-bottom: @baseLineHeight;
}

h1, h2, h3, h4, h5, h6 {
	font-family: @headingsFontFamily;
	font-weight: @headingsFontWeight;
	line-height: @baseLineHeight;
	margin: (@halfLineHeight) 0;
	color: @headingsColor;

	small {
		font-weight: normal;
		line-height: 1;
		color: @grayLight;
	}
}

h1 { font-size: @h1FontSize; }
h2 { font-size: @h2FontSize; }
h3 { font-size: @h3FontSize; }
h4 { font-size: @h4FontSize; }
h5 { font-size: @h5FontSize; }
h6 { font-size: @h6FontSize; }

h1, h2, h3 {
	line-height: @baseLineHeight * 2;
}

h1 small { font-size: @baseFontSize * 1.75;}
h2 small { font-size: @baseFontSize * 1.25;}
h3 small { font-size: @baseFontSize; }
h4 small { font-size: @baseFontSize; }

h1, h2, h3, h4, h5, h6,
p, div, address, pre, em, 
small, strong, cite, abbr {
	&.red 			{ color: @red;}
	&.cyan 			{ color: @cyan;}
	&.blue 			{ color: @blue;}
	&.darkblue 		{ color: @darkblue;}
	&.lightblue 	{ color: @lightblue;}
	&.purple 		{ color: @purple;}
	&.yellow 		{ color: @yellow;}
	&.lime 			{ color: @lime;}
	&.magenta 		{ color: @magenta;}
	&.green 		{ color: @green;}
	&.olive 		{ color: @olive;}
	&.silver 		{ color: @silver;}
	&.orange 		{ color: @orange;}
	&.brown 		{ color: @brown;}
	&.maroon 		{ color: @maroon;}
}


// 	Lists
ul, ol {
  padding: 0;
  margin-bottom: @halfLineHeight;
  margin-left: 28px;
}
ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}
li {
  line-height: @baseLineHeight;
}

ul.unstyled,
ol.unstyled {
  margin-left: 0;
  list-style: none;
}

dl {
  margin-bottom: @baseLineHeight;
}
dt,
dd {
  line-height: @baseLineHeight;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: @halfLineHeight;

  &:before {
		color: @grayLight;
		content: '\2014';
		padding-right: 0.5em;
	}
}

// Horizontal roles
hr {
	border: 0;
	margin: @baseLineHeight @halfLineHeight;
	border-top: 1px solid @grayDark;
	border-bottom: 1px solid @grayLighter;
}

// Abbreviations
abbr[title] {
	border-bottom: 1px dashed @gray;
	cursor: help;
}

// Addresses
address {
	font-style: normal;
	line-height: @baseLineHeight;
	display: block;
	margin-bottom: @baseLineHeight;
}

//  Quotes
q {
	font-style: italic;
}

blockquote {
	font-style: italic;
	position: relative;
	padding: 0 0 0 @halfLineHeight;
	margin: 0 0 @baseLineHeight 40px;
	border-left: 5px solid @grayLight;

	p {
		margin: @halfLineHeight 0 0 0;
		line-height: @baseLineHeight;

		&:first-child {
			margin: 0;
		}	
	}

	small {
		font-style: normal;
		display: block;
		line-height: @baseLineHeight;
		color: @grayLight;
		&:before {
			content: '\2014 \00A0';			
		}
	}

	&:before {
		position: absolute;
		top: -30px;
		left: -45px;
		content: '\201E';
		color: @grayLight;
		font-size: 90px;
		font-family: serif;
	}

	// Float right
	&.right {
		float: right;
		border-left: 0;
		border-right: 5px solid @grayLight;
		padding-left: 0;
		padding-right: @halfLineHeight;
		margin-left: 0;
		margin-right: 40px;

		p,small {
			text-align: right;
		}
		small {
      		&:before {
        		content: '';
     		}
      		&:after {
        		content: '\00A0 \2014';
      		}
		}

		&:before {
			content: '';	
		}
		&:after {
			position: absolute;
			top: -30px;
			right: -55px;
			content: '\201E';
			color: @grayLight;
			font-size: 90px;
			font-family: serif;
		}		
	}
}

// Codes
code, pre, var, samp, kbd {
	font-family: @monoFontFamily;
	font-size: @codeFontSize;
	padding: 0;	
	color: @codeLightColor;
	background-color: @codeLightBackgroundColor;
	border: 1px solid @codeBorderColor;
	.rounded(@smallBorderRadius);
}

code {
	padding: 3px;
	white-space: nowrap;
	.box-shadow(0 1px 2px rgba(0, 0, 0,0.3));
}

pre {
	display: block;
	line-height: @baseLineHeight;
	padding: @halfLineHeight;
	margin: 0 0 @halfLineHeight;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	white-space: pre-wrap;
	.rounded(@baseBorderRadius);
	.box-shadow(0 1px 2px rgba(0, 0, 0, 0.3));

	code {
		color: inherit;
		white-space: pre;
		white-space: pre-wrap;
		background-color: transparent;

	}

	&.scrollable {
		max-height: 400px;
		overflow-y: scroll;
	}
}

samp {
	display: block;
	line-height: @baseLineHeight;
	padding: @halfLineHeight;
	margin: 0 0 @halfLineHeight;
	color: @codeDarkColor;
	background-color: @codeDarkBackgroundColor;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	white-space: pre-wrap;
	.rounded(@baseBorderRadius);

	code {
		color: inherit;
		white-space: pre;
		white-space: pre-wrap;
		background-color: transparent;

	}

	&.scrollable {
		max-height: 400px;
		overflow-y: scroll;
	}
}

ins {
	color: @green;
}

del {
	color: @red;
}

// Tables

table {
	max-width: 100%;
	background-color: ;
	border-collapse: collapse;
	border-spacing: 0;
}

caption {
	font-size: @h4FontSize;
	font-weight: bold;
	text-align: center;
	margin: 0 0 @halfLineHeight 0;
}

.table {
	width: 100%;
	margin-bottom: @baseLineHeight;
	background-color: @tableBackground;

	th, td {
		padding: 8px;
		line-height: @baseLineHeight;
		text-align: left;
		vertical-align: top;
		border-top: 1px solid @tableBorderColor;
	}
	th {
		font-weight: bold;
	}
	thead th {
		vertical-align: bottom;
		background-color: @tableBackgroundHover;
	}
	
	// Remove top border
	caption + thead tr:first-child th,
	caption + thead tr:first-child td,
	thead:first-child tr:first-child th,
	thead:first-child tr:first-child td {
	    border-top: 0;
	}

	tbody tr {
		&.red > td 			{ background-color: @redBackground;}
		&.blue > td 		{ background-color: @blueBackground;}
		&.purple > td 		{ background-color: @purpleBackground;}
		&.yellow > td 		{ background-color: @yellowBackground;}
		&.green > td 		{ background-color: @greenBackground;}
	}

	&.bordered {
		border-collapse: separate; // Done so we can round those corners!
  		*border-collapse: collapse; // IE7 can't round corners anyway
  		border: 1px solid @tableBorderColor;
  		border-left: 0;
  		.rounded(@baseBorderRadius);

  		th,td {
  			border-left: 1px solid @tableBorderColor;
  		}
	}

	&.striped {
		tbody tr:nth-child(even) {
			background-color: @tableBackgroundAccent;
		}
	}

	&.hover {
		tbody tr:hover {
			th, td {
				background-color: @tableBackgroundHover;
			}

			&.red:hover > td 		{ background-color: darken(@redBackground, 5%);}
			&.blue:hover > td 		{ background-color: darken(@blueBackground, 5%);}
			&.purple:hover > td 	{ background-color: darken(@purpleBackground, 5%);}
			&.yellow:hover > td 	{ background-color: darken(@yellowBackground, 15%);}
			&.green:hover > td 		{ background-color: darken(@greenBackground, 10%);}
		}
	}
	
	&.compact {
		th,td {
			padding: 2px;
		}
	}
}

// Forms

form {
	margin: 0 0 @baseLineHeight 0;
}

fieldset {
	padding: 0;
	margin: 0;
	border: 0;
}

legend {
	font-size: @h4FontSize;
	line-height: @baseLineHeight;
	display: block;
	width: 100%;
	padding: 0;
	margin: 0 0 @baseLineHeight 0;
	color: @grayDark;
	border-bottom: 2px solid @grayLighter;

	small {
		font-size: @baseFontSize * 0.75;
		color: @grayLight;
	}
}

label {
	display: block;
	margin-bottom: 5px;
}

label, button, input,
textarea, select {
	font-family: @baseFontFamily;
	font-size: @baseFontSize;
	font-weight: normal;
	line-height: @baseLineHeight;
}

textarea,
input {
	width: 200px;
}

textarea {
	height: auto;
}

label {
	display: block;
	margin-bottom: 5px;
}

input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="number"],
input[type="url"],
input[type="tel"],
input[type="color"],
textarea, select {
	.inline-block();
	height: @baseLineHeight;
	padding: 6px;
	margin-bottom: @halfLineHeight;
	color: @gray;
	background-color: @inputBackground;
	border: 1px solid lighten(@inputBorder, 10%);
	vertical-align: middle;
	.rounded(@inputBorderRadius);
	.transition(~"box-shadow linear 0.2s, background-color ease-in-out 0.5s");
	.volumeInput();

	&:focus {
		background-color: darken(@inputBackground, 7.5%);
		outline: 0;
		border-bottom: 1px solid @inputBackground;
		.box-shadow(0 3px 0 @lightblue);
	}

	&.red {
		.volumeInput(@red);
		&:focus { .box-shadow(0 3px 0 @red);}
	}
	&.cyan {
		.volumeInput(@cyan);
		&:focus { .box-shadow(0 3px 0 @cyan);}
	}
	&.blue {
		.volumeInput(@blue);
		&:focus { .box-shadow(0 3px 0 @blue);}
	}
	&.purple {
		.volumeInput(@purple);
		&:focus { .box-shadow(0 3px 0 @purple);}
	}
	&.yellow {
		.volumeInput(@yellow);
		&:focus { .box-shadow(0 3px 0 @yellow);}
	}
	&.green {
		.volumeInput(@green);
		&:focus { .box-shadow(0 3px 0 @green);}
	}
	&.orange {
		.volumeInput(@orange);
		&:focus { .box-shadow(0 3px 0 @orange);}
	}
}

input {
	.spanX (@index: @gridColumns) when (@index > 0) {
    	&.span@{index} {
			width: @index * 30px;
    	}
    	.spanX(@index - 1);
    }
	.spanX();
}

select {
  width: 200px;
  border: 1px solid lighten(@inputBorder, 10%);
  background-color: @inputBackground;

  &:focus {
  	background-color: @inputBackground;
  	outline: 0;
  }
}

select[multiple],
select[size] {
  height: auto;
}

select,
input[type="file"] {
  height: @inputHeight;
  *margin-top: 4px;
  line-height: @inputHeight;
}

input[type="radio"],
input[type="checkbox"] {
  margin: -2px 0 0;
  *margin-top: 0;
  margin-top: 1px \9;
  line-height: normal;
}

input,
textarea {
  &:-moz-placeholder {
    color: @placeholderText;
  }
  &:-ms-input-placeholder {
    color: @placeholderText;
  }
  &::-webkit-input-placeholder {
    color: @placeholderText;
  }
}

.radio,
.checkbox {
	min-height: @baseLineHeight;
	padding-left: -20px;

	input[type="checkbox"]
	input[type="radio"], {
		float: left;
		margin-left: -20px;
	}

	&.inline {
		.inline-block();
		padding-top: 5px;
		margin-bottom: 0;
		vertical-align: middle;
	}
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
  margin-left: 10px;
}

input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  cursor: not-allowed;
  background-color: @inputDisabledBackground;
}
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
  background-color: transparent;
}

