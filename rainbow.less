// 				Imports
// ------------------------------------

// 			Mixins
@import "components/mixins.less";
//  		Reset
@import "components/reset.less";



// =============================================
//					Variables
// =============================================

// 					Colors
// ----------------------------------------

// 		Grays
@black:             #000;
@grayDarker:        #222;
@grayDark:          #333;
@gray:              #555;
@grayLight:         #999;
@grayLighter:       #eee;
@white:             #fff;

// 	   Accent colors
@red:				#F22; //*
@cyan:				#0DD; //
@blue:				#28F; //
@darkblue:			#07D; //
@lightblue:			#8DE; //
@purple:			#C0C; //
@yellow:			#fC0; //
@lime:				#4F6; //
@pink:				#F7F; //
@silver:			#CCC;
@orange:			#FA3; //
@brown:				#B52; //
@maroon:			#C00; //
@green:				#4a4; //
@olive:				#BA0;

// Backgrounds color
@redBackground:				lighten(@red, 35%);
@blueBackground:			lighten(@blue, 35%);
@purpleBackground:			lighten(@purple, 50%);
@yellowBackground:			lighten(@yellow, 40%);
@greenBackground:			lighten(@green, 40%);

// Border colors
@redBorder: 				darken(@redBackground, 10%);
@blueBorder: 				darken(@blueBackground, 10%);
@purpleBorder: 				darken(@purpleBackground, 10%);
@yellowBorder: 				darken(@yellowBackground, 10%);
@greenBorder: 				darken(@greenBackground, 10%);

// Text colors
@redText: 					darken(spin(@red, -15), 5%);
@blueText: 					darken(spin(@blue, -15), 15%);
@purpleText: 				darken(spin(@purple, -15), 5%);
@yellowText: 				darken(spin(@yellow, -15), 5%);
@greenText: 				darken(spin(@green, -15), 5%);


// Tables colors
@tableBackground: 			transparent;
@tableBackgroundAccent: 	#F9F9F9;
@tableBackgroundHover: 		#F0F0EE;
@tableBorderColor: 			#CECECE;

// 			Base
@bodyBackgroundColor: 			@white;
@textColor:						@grayDark;
@linkColor:						#28F;
@linkColorHover: 				darken(@linkColor, 10%);

@codeLightBackgroundColor: 		darken(@bodyBackgroundColor, 5%);
@codeLightColor: 				lighten(@textColor, 10%);
@codeDarkBackgroundColor: 		@grayDarker;
@codeDarkColor: 				@grayLighter;
@codeBorderColor: 				lighten(@grayLight, 20%);




@baseFontFamily:  		Arial, "Helvetica Neue", Helvetica, sans-serif;
@monoFontFamily: 		Monaco, "Courier New", Menlo, Consolas, monospace;

@baseFontSize: 			14px;

@fontSizeLarge: 		@baseFontSize * 1.25;
@fontSizeSmall: 		@baseFontSize * 0.85;
@fontSizeMini: 			@baseFontSize * 0.75;
@codeFontSize: 			@baseFontSize - 2px;

@paddingLarge: 				11px 19px;
@paddingSmall: 				2px 10px;
@paddingMini: 				0 6px;

@paddingInputLarge: 		11px 10px;
@paddingInputSmall: 		@paddingSmall;
@paddingInputMini: 			@paddingMini;

@baseLineHeight: 		20px;
@halfLineHeight: 		@baseLineHeight/2;

@headingsFontFamily: 	inherit;
@headingsFontWeight: 	bold;
@headingsColor: 		inherit;

@h1FontSize: 			@baseFontSize * 2.75;
@h2FontSize: 			@baseFontSize * 2.25;
@h3FontSize: 			@baseFontSize * 1.75;
@h4FontSize: 			@baseFontSize * 1.25;
@h5FontSize: 			@baseFontSize;
@h6FontSize: 			@baseFontSize * 0.85;

@baseBorderRadius:		4px;
@largeBorderRadius:		6px;
@smallBorderRadius: 	3px;
@miniBorderRadius:		@smallBorderRadius;

// 				Banner
// ------------------------------
@bannerBackground: 				@grayLighter;
@bannerFontSize: 				60px;

// 				Forms
// ------------------------------

// Inputs
@inputBackground: 				darken(@white, 5%);
@inputDisabledBackground: 		#DFDFDF;
@formActionBackground: 			#F8F8F8;
@inputBorder: 					#D9D9D9;
@placeholderText: 				@grayLight;

@inputHeight: 					@baseLineHeight + 14px;
@inputBorderRadius: 			@baseBorderRadius;

@horizontalComponentOffset: 	150px;

// Buttons
@btnBackground: 					darken(@white, 5%);
@btnBackgroundHighlight: 			darken(@btnBackground, 10%);
@btnBorder: 						#CCC;

@btnRedBackground: 					#F95959;
@btnRedBackgroundHighlight: 		#A51B1B;

@btnCyanBackground: 				@cyan;
@btnCyanBackgroundHighlight: 		darken(@btnCyanBackground, 15%);

@btnBlueBackground: 				@blue;
@btnBlueBackgroundHighlight: 		darken(@btnBlueBackground, 20%);

@btnDarkblueBackground: 			@darkblue;
@btnDarkblueBackgroundHighlight: 	darken(@btnDarkblueBackground, 20%);

@btnLightblueBackground: 			#38C4DC;
@btnLightblueBackgroundHighlight: 	darken(@btnLightblueBackground, 20%);

@btnPurpleBackground: 				@purple;
@btnPurpleBackgroundHighlight: 		darken(@btnPurpleBackground, 15%);

@btnYellowBackground: 				@yellow;
@btnYellowBackgroundHighlight: 		darken(@btnYellowBackground, 15%);

@btnLimeBackground: 				#35EA59;
@btnLimeBackgroundHighlight: 		darken(@btnLimeBackground, 20%);

@btnPinkBackground: 				@pink;
@btnPinkBackgroundHighlight: 		darken(@btnPinkBackground, 30%);

@btnOrangeBackground: 				@orange;
@btnOrangeBackgroundHighlight: 		darken(@btnOrangeBackground, 20%);

@btnBrownBackground: 				@brown;
@btnBrownBackgroundHighlight: 		darken(@btnBrownBackground, 15%);

@btnMaroonBackground: 				@maroon;
@btnMaroonBackgroundHighlight: 		darken(@btnMaroonBackground, 15%);

@btnGreenBackground: 				lighten(@green, 5%);
@btnGreenBackgroundHighlight: 		darken(@btnGreenBackground, 15%);

@btnOliveBackground: 				@olive;
@btnOliveBackgroundHighlight: 		darken(@btnOliveBackground, 15%);

@btnBlackBackground: 				lighten(@black, 25%);
@btnBlackBackgroundHighlight: 		darken(@btnBlackBackground, 15%);


// 					Navbar 
// ---------------------------------------------
@navbarHeight: 			40px;
@zIndexNavbar: 			1000;

// 					  Grid
// ---------------------------------------------

@gridColumns: 			12;
@gridColumnWidth:		60px;
@gridGutterWidth:		20px;
@gridWidth: 			(@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

@fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridWidth);
@fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridWidth);

// =============================================
// 					  Base
// =============================================

body {
	font-family: @baseFontFamily;
	font-size: @baseFontSize;
	line-height: @baseLineHeight;
	color: @textColor;
	margin: 0;
	background-color: @bodyBackgroundColor;

	a {
		cursor: pointer;
		color: @linkColor;
		text-decoration: none;

		&:hover,
		&:focus {
			color: @linkColorHover;	
			text-decoration: underline;
		}
	}

	&.red 			{ .linkColor(@red);}
	&.cyan 			{ .linkColor(@cyan);}
	&.blue 			{ .linkColor(@blue);}
	&.darkblue 		{ .linkColor(@darkblue);}
	&.lightblue 	{ .linkColor(@lightblue);}
	&.purple 		{ .linkColor(@purple);}
	&.yellow 		{ .linkColor(@yellow);}
	&.lime 			{ .linkColor(@lime);}
	&.pink 			{ .linkColor(@pink);}
	&.green 		{ .linkColor(@green);}
	&.olive 		{ .linkColor(@olive);}
	&.silver 		{ .linkColor(@silver);}
	&.orange 		{ .linkColor(@orange);}
	&.brown 		{ .linkColor(@brown);}
	&.maroon 		{ .linkColor(@maroon);}
}

.container {
	.clearfix();
	.center();
}

.fluid-container {
	.clearfix();
	padding: 0 @gridGutterWidth;
}


// =============================================
// 					  Grid
// =============================================

.grid {
	.clearfix();
	margin: 0 auto;
	width: @gridWidth;
}

.row {
	.clearfix();
	margin-top: @gridGutterWidth;

	&:first-child {
		margin-top: 0;
	}

	> [class^='span'] {
		float: left;
		margin-left: @gridGutterWidth;

		&:first-child {
			margin-left: 0;
		}
	}
}

.span (@columns: 1) {
	width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
}

.spanX (@index: @gridColumns) when (@index > 0) {
   	.span@{index} {.span(@index);}
   	.spanX(@index - 1);
}
.spanX();

.row.fluid {
   	.clearfix();
   	width: 100%;
	float: left;
	[class^='span'] {
		margin-left: @fluidGridGutterWidth;
      	*margin-left: @fluidGridGutterWidth - (.5 / @gridWidth * 100 * 1%);
        	&:first-child {
       		margin-left: 0;
       	}
	}
	
	.span (@columns: 1) {
		width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
    	*width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridWidth * 100 * 1%);
	}

	.spanX (@index: @gridColumns) when (@index > 0) {
   		.span@{index} {.span(@index);}
   		.spanX(@index - 1);
  		 }
	.spanX();	
}


// =============================================
// 					 Images
// =============================================

img {
	&.border {
		padding: 4px;
		background-color: @white;
		border: 1px solid @grayLight;
		.box-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
	}
	&.rounded {
		.border-radius(@baseBorderRadius);
	}
	&.circle {
		.border-radius(50%);
	}
}

// =============================================
// 					Typography
// =============================================

p {
	margin-bottom: @halfLineHeight;
}

small 	{ font-size: 85%;}
strong 	{ font-weight: bold;}
em 		{ font-style: italic;}
cite 	{ font-style: normal;}

.lead {
	font-size: @baseFontSize * 1.5;
	font-weight: 200;
	line-height: @baseLineHeight * 1.5;
	margin-bottom: @baseLineHeight;
}

.headline {
	margin: @baseLineHeight 0 @halfLineHeight;
	padding-bottom: @halfLineHeight;
	border-bottom: 2px solid @grayLighter;
}


h1, h2, h3, h4, h5, h6 {
	font-family: @headingsFontFamily;
	font-weight: @headingsFontWeight;
	line-height: @baseLineHeight;
	margin: (@halfLineHeight) 0;
	color: @headingsColor;

	small {
		font-weight: normal;
		line-height: 1;
		color: @grayLight;
	}
}

h1 { font-size: @h1FontSize; }
h2 { font-size: @h2FontSize; }
h3 { font-size: @h3FontSize; }
h4 { font-size: @h4FontSize; }
h5 { font-size: @h5FontSize; }
h6 { font-size: @h6FontSize; }

h1, h2, h3 {
	line-height: @baseLineHeight * 2;
}

h1 small { font-size: @baseFontSize * 1.75;}
h2 small { font-size: @baseFontSize * 1.25;}
h3 small { font-size: @baseFontSize; }
h4 small { font-size: @baseFontSize; }

h1, h2, h3, h4, h5, h6,
p, div, address, pre, em, 
small, strong, cite, abbr {
	&.red 			{ color: @red;}
	&.cyan 			{ color: @cyan;}
	&.blue 			{ color: @blue;}
	&.darkblue 		{ color: @darkblue;}
	&.lightblue 	{ color: @lightblue;}
	&.purple 		{ color: @purple;}
	&.yellow 		{ color: @yellow;}
	&.lime 			{ color: @lime;}
	&.pink 			{ color: @pink;}
	&.green 		{ color: @green;}
	&.olive 		{ color: @olive;}
	&.silver 		{ color: @silver;}
	&.orange 		{ color: @orange;}
	&.brown 		{ color: @brown;}
	&.maroon 		{ color: @maroon;}
}


// 	Lists
ul, ol {
  padding: 0;
  margin-bottom: @halfLineHeight;
  margin-left: 28px;
}
ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}
li {
  line-height: @baseLineHeight;
}

ul.unstyled,
ol.unstyled {
  margin-left: 0;
  list-style: none;
}

dl {
  margin-bottom: @baseLineHeight;
}
dt,
dd {
  line-height: @baseLineHeight;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: @halfLineHeight;

  &:before {
		color: @grayLight;
		content: '\2014';
		padding-right: 0.5em;
	}
}

// Horizontal roles
hr {
	border: 0;
	margin: @baseLineHeight @halfLineHeight;
	border-top: 1px solid @grayDark;
	border-bottom: 1px solid @grayLighter;
}

// Abbreviations
abbr[title] {
	border-bottom: 1px dashed @gray;
	cursor: help;
}

// Addresses
address {
	font-style: normal;
	line-height: @baseLineHeight;
	display: block;
	margin-bottom: @baseLineHeight;
}

//  Quotes
q {
	font-style: italic;
}

blockquote {
	font-style: italic;
	position: relative;
	padding: 0 0 0 @halfLineHeight;
	margin: 0 0 @baseLineHeight 40px;
	border-left: 5px solid @grayLight;

	p {
		margin: @halfLineHeight 0 0 0;
		line-height: @baseLineHeight;

		&:first-child {
			margin: 0;
		}	
	}

	small {
		font-style: normal;
		display: block;
		line-height: @baseLineHeight;
		color: @grayLight;
		&:before {
			content: '\2014 \00A0';			
		}
	}

	&:before {
		position: absolute;
		top: -30px;
		left: -45px;
		content: '\201E';
		color: @grayLight;
		font-size: 90px;
		font-family: serif;
	}

	// Float right
	&.right {
		float: right;
		border-left: 0;
		border-right: 5px solid @grayLight;
		padding-left: 0;
		padding-right: @halfLineHeight;
		margin-left: 0;
		margin-right: 40px;

		p,small {
			text-align: right;
		}
		small {
      		&:before {
        		content: '';
     		}
      		&:after {
        		content: '\00A0 \2014';
      		}
		}

		&:before {
			content: '';	
		}
		&:after {
			position: absolute;
			top: -30px;
			right: -55px;
			content: '\201E';
			color: @grayLight;
			font-size: 90px;
			font-family: serif;
		}		
	}
}

// Codes
code, pre, var, samp, kbd {
	font-family: @monoFontFamily;
	font-size: @codeFontSize;
	padding: 0;	
	color: @codeLightColor;
	background-color: @codeLightBackgroundColor;
	border: 1px solid @codeBorderColor;
	.border-radius(@smallBorderRadius);
}

code {
	padding: 3px;
	white-space: nowrap;
}

pre {
	display: block;
	line-height: @baseLineHeight;
	padding: @halfLineHeight;
	margin: 0 0 @halfLineHeight;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	white-space: pre-wrap;
	.border-radius(@baseBorderRadius);
	.box-shadow(inset 0 1px 2px rgba(0, 0, 0, 0.3));

	code {
		color: inherit;
		white-space: pre;
		white-space: pre-wrap;
		background-color: transparent;

	}

	&.scrollable {
		max-height: 400px;
		overflow-y: scroll;
	}
}

samp {
	display: block;
	line-height: @baseLineHeight;
	padding: @halfLineHeight;
	margin: 0 0 @halfLineHeight;
	color: @codeDarkColor;
	background-color: @codeDarkBackgroundColor;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	white-space: pre-wrap;
	.border-radius(@baseBorderRadius);

	code {
		color: inherit;
		white-space: pre;
		white-space: pre-wrap;
		background-color: transparent;

	}

	&.scrollable {
		max-height: 400px;
		overflow-y: scroll;
	}
}

ins {
	color: @green;
}

del {
	color: @red;
}

// 			Banges
// ===============================
.label,
.bange {
	.inline-block();
	font-size: @fontSizeMini;
	font-weight: bold;
	line-height: @baseLineHeight * 0.75;
	vertical-align: baseline;
	white-space: nowrap;
	text-shadow: 0 1px 0 @grayDark;
	color: @white;
	background-color: @grayLight;
	.box-shadow(inset 0 1px 0 @grayDark);

	&:empty {
		display: none;
	}

	&.red 			{ background-color: @red;}
	&.cyan 			{ background-color: @cyan;}
	&.blue 			{ background-color: @blue;}
	&.darkblue 		{ background-color: @darkblue;}
	&.lightblue 	{ background-color: @lightblue;}
	&.purple 		{ background-color: @purple;}
	&.yellow 		{ background-color: @yellow;}
	&.lime 			{ background-color: @lime;}
	&.pink 			{ background-color: @pink;}
	&.green 		{ background-color: @green;}
	&.olive 		{ background-color: @olive;}
	&.orange 		{ background-color: @orange;}
	&.brown 		{ background-color: @brown;}
	&.maroon 		{ background-color: @maroon;}
	&.black 		{ background-color: @gray;}
}

.label {
	padding: 2px 5px;
	.border-radius(@baseBorderRadius);
}
.bange {
	padding: 2px 10px;
	.border-radius(@baseBorderRadius);
}

a.label:hover,
a.label:focus,
a.bange:hover,
a.bange:focus {
	text-decoration: none;
	cursor: pointer;
	color: @white;
}

.btn {
	.labal,
	.bange {
		position: relative;
		top: -1px;
	}

	&.mini {
		.label,
		.bange {
			top: 0;
			padding-top: 0;
			padding-bottom: 0; 
		}
	}
}

// 			Tables
// ===============================
table {
	max-width: 100%;
	background-color: ;
	border-collapse: collapse;
	border-spacing: 0;
}

caption {
	font-size: @h4FontSize;
	font-weight: bold;
	text-align: center;
	margin: 0 0 @halfLineHeight 0;
}

.table {
	width: 100%;
	margin-bottom: @baseLineHeight;
	background-color: @tableBackground;

	th, td {
		padding: 8px;
		line-height: @baseLineHeight;
		text-align: left;
		vertical-align: top;
		border-top: 1px solid @tableBorderColor;
	}
	th {
		font-weight: bold;
	}
	thead th {
		vertical-align: bottom;
		background-color: @tableBackgroundHover;
	}
	
	// Remove top border
	caption + thead tr:first-child th,
	caption + thead tr:first-child td,
	thead:first-child tr:first-child th,
	thead:first-child tr:first-child td {
	    border-top: 0;
	}

	tbody tr {
		&.red > td 			{ background-color: @redBackground;}
		&.blue > td 		{ background-color: @blueBackground;}
		&.purple > td 		{ background-color: @purpleBackground;}
		&.yellow > td 		{ background-color: @yellowBackground;}
		&.green > td 		{ background-color: @greenBackground;}
	}

	&.bordered {
		border-collapse: separate; // Done so we can round those corners!
  		*border-collapse: collapse; // IE7 can't round corners anyway
  		border: 1px solid @tableBorderColor;
  		border-left: 0;
  		.border-radius(@baseBorderRadius);

  		th,td {
  			border-left: 1px solid @tableBorderColor;
  		}
	}

	&.striped {
		tbody tr:nth-child(even) {
			background-color: @tableBackgroundAccent;
		}
	}

	&.hover {
		tbody tr:hover {
			th, td {
				background-color: @tableBackgroundHover;
			}

			&.red:hover > td 		{ background-color: darken(@redBackground, 5%);}
			&.blue:hover > td 		{ background-color: darken(@blueBackground, 5%);}
			&.purple:hover > td 	{ background-color: darken(@purpleBackground, 5%);}
			&.yellow:hover > td 	{ background-color: darken(@yellowBackground, 15%);}
			&.green:hover > td 		{ background-color: darken(@greenBackground, 10%);}
		}
	}
	
	&.compact {
		th,td {
			padding: 2px;
		}
	}
}

//    			Banner
// ================================

.banner {
	font-size: @fontSizeLarge;
	font-weight: 400;
	line-height: @baseLineHeight * 1.5;
	margin-bottom: 30px;
	padding: 50px;
	color: inherit;
	background-color: @bannerBackground;

	> h1 {
		font-size: @bannerFontSize;
		line-height: 1;
		letter-spacing: -2px;
		margin-bottom: 0;
		color: inherit;
	}

	li {
		line-height: @baseLineHeight * 1.5;
	}

	&.rounded {
		.border-radius(@largeBorderRadius);
	}
}

//				 Forms
// ==================================
form {
	margin: 0 0 @baseLineHeight 0;
}

fieldset {
	padding: 0;
	margin: 0;
	border: 0;
}

legend {
	font-size: @h4FontSize;
	line-height: @baseLineHeight;
	display: block;
	width: 100%;
	padding: 0;
	margin: 0 0 @baseLineHeight 0;
	color: @grayDark;
	border-bottom: 2px solid @grayLighter;

	small {
		font-size: @baseFontSize * 0.75;
		color: @grayLight;
	}
}

label {
	display: block;
	margin-bottom: 5px;
}

label, button, input,
textarea, select {
	font-family: @baseFontFamily;
	font-size: @baseFontSize;
	font-weight: normal;
	line-height: @baseLineHeight;
}

textarea,
input {
	width: 200px;
}

textarea {
	height: auto;
}

label {
	display: block;
	margin-bottom: 5px;
}

input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="number"],
input[type="url"],
input[type="tel"],
input[type="color"],
textarea, select {
	.inline-block();
	height: @baseLineHeight;
	padding: 5px;
	margin-bottom: @halfLineHeight;
	color: @gray;
	background-color: @inputBackground;
	border: 1px solid @inputBorder;
	vertical-align: middle;
	.border-radius(@inputBorderRadius);
	.transition(~"box-shadow linear 0.2s, background-color ease-in-out 0.5s");
	.volumeInput();

	&:focus {
		background-color: lighten(@inputBackground, 2.5%);
		outline: 0;
		.box-shadow(0 3px 0 @lightblue);
	}

	// Mini
	&.mini {
		font-size: @fontSizeMini;
		padding: @paddingInputMini;
		.border-radius(@miniBorderRadius);
	}

	// Small
	&.small {
		font-size: @fontSizeSmall;
		padding: @paddingInputSmall;
		.border-radius(@smallBorderRadius);
	}

	// Large
	&.large {
		font-size: @fontSizeLarge;
		padding: @paddingInputLarge;
		.border-radius(@largeBorderRadius);
	}

	&.red {
		.volumeInput(@red);
		&:focus { .box-shadow(0 3px 0 @red);}
	}
	&.blue {
		.volumeInput(@blue);
		&:focus { .box-shadow(0 3px 0 @blue);}
	}
	&.purple {
		.volumeInput(@purple);
		&:focus { .box-shadow(0 3px 0 @purple);}
	}
	&.yellow {
		.volumeInput(@yellow);
		&:focus { .box-shadow(0 3px 0 @yellow);}
	}
	&.green {
		.volumeInput(@green);
		&:focus { .box-shadow(0 3px 0 @green);}
	}
	&.orange {
		.volumeInput(@orange);
		&:focus { .box-shadow(0 3px 0 @orange);}
	}
}

input, select,
textarea {
	.spanX (@index: @gridColumns) when (@index > 0) {
    	&.span@{index} {
			width: ((@gridColumnWidth) * @index) + (@gridGutterWidth * (@index - 1) + 4);
			margin-left: 0;
    	}
    	.spanX(@index - 1);
    }
	.spanX();
}

select {
  width: 200px;
  border: 1px solid @inputBorder;
  background-color: @inputBackground;

  &:focus {
  	background-color: @inputBackground;
  	outline: 0;
  }
}

select[multiple],
select[size] {
  height: auto;
}

select,
input[type="file"] {
  height: @inputHeight;
  *margin-top: 4px;
  line-height: @inputHeight;
}

input[type="radio"],
input[type="checkbox"] {
  margin: -2px 0 0;
  *margin-top: 0;
  margin-top: 1px \9;
  line-height: normal;
}

input,
textarea {
  &:-moz-placeholder {
    color: @placeholderText;
  }
  &:-ms-input-placeholder {
    color: @placeholderText;
  }
  &::-webkit-input-placeholder {
    color: @placeholderText;
  }
}

.radio,
.checkbox {
	min-height: @baseLineHeight;
	padding-left: -20px;

	input[type="checkbox"]
	input[type="radio"], {
		float: left;
		margin-left: -20px;
	}

	&.inline {
		.inline-block();
		padding-top: 5px;
		margin-bottom: 0;
		vertical-align: middle;
	}
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
  margin-left: 10px;
}

input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  cursor: not-allowed;
  background-color: @inputDisabledBackground;
}
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
  background-color: transparent;
}

.controls-row {
	.clearfix();
	&[class*="span"] {
		float: left;
	}
}

form > .action {
	.clearfix();
	padding: @baseLineHeight 20px;
	margin: @baseLineHeight 0;
	background-color: @formActionBackground;
	border-top: 1px solid @inputBorder;
}

form > .help {
	display: block;
	margin-bottom: @halfLineHeight;
	color: lighten(@textColor, 10%);

	&.inline {
		.inline-block();
		vertical-align: middle;
		padding-left: 5px;
	}
}

.append, .prepend {
	font-size: 0;
	.inline-block();
	white-space: nowrap;
	vertical-align: middle;
	margin-bottom: @halfLineHeight;

	input, select {
		font-size: @baseFontSize;
		position: relative;
		margin-bottom: 0;
		*margin-left: 0;
		vertical-align: top;
		.border-radius(0 @inputBorderRadius @inputBorderRadius 0);
		&:focus {
			z-index: 2;
		}
	}

	.add-on {
		.inline-block();
		font-size: @baseFontSize;	
		font-weight: normal;
		line-height: @baseLineHeight;
		text-align: center;
        text-shadow: 0 1px 0 @white;
		background-color: @inputBackground;
		min-width: 16px;
		width: auto;
		height: @baseLineHeight;
		padding: 5px;
        border: 1px solid @inputBorder;
	}

	.add-on, .btn {
		margin-left: -1px;
		.border-radius(0);
	}
}

.prepend {
	.add-on:first-child,
	.btn:first-child {
		.border-radius(@inputBorderRadius 0 0 @inputBorderRadius);
	}
}

.append {
	input, select {
		.border-radius(@inputBorderRadius 0 0 @inputBorderRadius);
		+ .btn:last-child {
			.border-radius(0 @inputBorderRadius @inputBorderRadius 0);
		}
	}
	.add-on:last-child,
	.btn:last-child {
		.border-radius(0 @inputBorderRadius @inputBorderRadius 0);
	}
}

.append.prepend {
	input, select {
		.border-radius(0);
	}
	.add-on:first-child,
	.btn:first-child {
		margin-right: -1px;
		.border-radius(@inputBorderRadius 0 0 @inputBorderRadius);
	}
	.add-on:last-child,
	.btn:last-child {
		margin-left: -1px;
		.border-radius(0 @inputBorderRadius @inputBorderRadius 0);
	}
}

form.inline,
form.horizontal {
	input,
	select,
	textarea,
	.help.inline,
	.append,
	.preppend {
		.inline-block();
		margin-bottom: 0;
		vertical-align: middle;
	}
}

form.inline {
	.btn-group, label {
		.inline-block();
	}
	.append, .prepend {
		margin-bottom: 0;
	}
	.radio, .checkbox {
		margin-bottom: 0;
		padding-left: 0;
		vertical-align: middle;
		
		input[type="checkbox"],
		input[type="radio"] {
			margin-left: 3px;
		}
	}
}

form.horizontal {
	.control-row {
		.clearfix();
		margin-bottom: @baseLineHeight;

		label {
			text-align: right;
			float: left;
			width: @horizontalComponentOffset - 20;
			padding-top: 5px;
		}

		.controls {
			*display: inline-block;
			*padding-left: 20px;
			margin-left: @horizontalComponentOffset;
			*margin-left: 0;
			&:first-child {
				*padding-left: @horizontalComponentOffset;
			}
		}
	}

	input,
	select,
	textarea,
	.prepend,
	.append {
		+ .help {
			margin-top: @halfLineHeight;
		}
	}

	.action {
		padding-left: @horizontalComponentOffset;
	}

	.help {
		margin-bottom: 0;;
	}
}

// 		Buttons
// ===================

// Base Style
.btn {
	.inline-block();
	font-size: @baseFontSize;
	line-height: @baseLineHeight;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	padding: 5px 12px;
	margin-bottom: 0;
	border: 1px solid;
	*border: 0;
	.buttonBackground(@btnBackground, @btnBackgroundHighlight, @grayDark, 0 1px 1px fadeout(@white, 50%));
	.border-radius(@baseBorderRadius);
	.user-select(none);
	.volumeButton(@btnBackground, @btnBackgroundHighlight);
	
	&:hover,
	&:focus {
		text-decoration: none;
		background-repeat: repeat-x;
		.transition(~"box-shadow linear 0.2s, background-color linear 0.5s");
	}

	&:active,
	&.active {
		outline: 0;
		.transition(~"box-shadow linear 0.2s, background-image linear 0.5s");
	}

	&.disabled,
	&[disabled] {
		.opacity(0.75);
		cursor: default;
	}
}

// Button Sizes 
.btn {
	// Mini
	&.mini {
		font-size: @fontSizeMini;
		padding: @paddingMini;
		.border-radius(@miniBorderRadius);
	}

	// Small
	&.small {
		font-size: @fontSizeSmall;
		padding: @paddingSmall;
		.border-radius(@smallBorderRadius);
	}

	// Large
	&.large {
		font-size: @fontSizeLarge;
		padding: @paddingLarge;
		.border-radius(@largeBorderRadius);
	}

	// Block Button
	&.block {
		display: block;
		width: 100%;
		padding-left: 0;
		padding-right: 0;
		.box-sizing(border-box);
		+ .block {
			margin-top: 5px;
		}
	}
	input[type="submit"],
	input[type="reset"],
	input[type="button"] {
		&.block {
			width: 100%;
		}
	}
	
	// Grid System
	.spanX (@index: @gridColumns) when (@index > 0) {
    	&.span@{index} {
			width: ((@gridColumnWidth) * @index) + (@gridGutterWidth * (@index - 1) + 16);
			.box-sizing(border-box);
    	}
    	.spanX(@index - 1);
    }
	.spanX();
}

.btn {
	&.red {
		.buttonBackground(@btnRedBackground, @btnRedBackgroundHighlight);
		.volumeButton(@btnRedBackground, @btnRedBackgroundHighlight);
	}
	&.cyan {
		.buttonBackground(@btnCyanBackground, @btnCyanBackgroundHighlight);
		.volumeButton(@btnCyanBackground, @btnCyanBackgroundHighlight);
	}
	&.blue {
		.buttonBackground(@btnBlueBackground, @btnBlueBackgroundHighlight);
		.volumeButton(@btnBlueBackground, @btnBlueBackgroundHighlight);
	}
	&.darkblue {
		.buttonBackground(@btnDarkblueBackground, @btnDarkblueBackgroundHighlight);
		.volumeButton(@btnDarkblueBackground, @btnDarkblueBackgroundHighlight);
	}
	&.lightblue {
		.buttonBackground(@btnLightblueBackground, @btnLightblueBackgroundHighlight);
		.volumeButton(@btnLightblueBackground, @btnLightblueBackgroundHighlight);
	}
	&.purple {
		.buttonBackground(@btnPurpleBackground, @btnPurpleBackgroundHighlight);
		.volumeButton(@btnPurpleBackground, @btnPurpleBackgroundHighlight);
	}
	&.yellow {
		.buttonBackground(@btnYellowBackground, @btnYellowBackgroundHighlight);
		.volumeButton(@btnYellowBackground, @btnYellowBackgroundHighlight);
	}
	&.lime {
		.buttonBackground(@btnLimeBackground, @btnLimeBackgroundHighlight);
		.volumeButton(@btnLimeBackground, @btnLimeBackgroundHighlight);
	}
	&.pink {
		.buttonBackground(@btnPinkBackground, @btnPinkBackgroundHighlight);
		.volumeButton(@btnPinkBackground, @btnPinkBackgroundHighlight);
	}
	&.green {
		.buttonBackground(@btnGreenBackground, @btnGreenBackgroundHighlight);
		.volumeButton(@btnGreenBackground, @btnGreenBackgroundHighlight);
	}
	&.olive {
		.buttonBackground(@btnOliveBackground, @btnOliveBackgroundHighlight);
		.volumeButton(@btnOliveBackground, @btnOliveBackgroundHighlight);
	}
	&.orange {
		.buttonBackground(@btnOrangeBackground, @btnOrangeBackgroundHighlight);
		.volumeButton(@btnOrangeBackground, @btnOrangeBackgroundHighlight);
	}
	&.brown {
		.buttonBackground(@btnBrownBackground, @btnBrownBackgroundHighlight);
		.volumeButton(@btnBrownBackground, @btnBrownBackgroundHighlight);
	}
	&.maroon {
		.buttonBackground(@btnMaroonBackground, @btnMaroonBackgroundHighlight);
		.volumeButton(@btnMaroonBackground, @btnMaroonBackgroundHighlight);
	}
	&.black {
		.buttonBackground(@btnBlackBackground, @btnBlackBackgroundHighlight);
		.volumeButton(@btnBlackBackground, @btnBlackBackgroundHighlight);
	}

	&.link { 
		border-color: transparent;
		color: @linkColor;
		background-color: transparent;
		cursor: pointer;
		.border-radius(0);

		&:hover,
		&:focus {
			text-decoration: underline;
			color: @linkColorHover;
			.box-shadow(none);
		}
		&:active,
		&[disabled] {
			background-color: transparent;
			background-image: none;
			.box-shadow(none);	
		}
		&[disabled]:hover,
		&[disabled]:focus {
			text-decoration: none;
			color: @grayDark;
		}
	}
}

// Buttons Groups
.btn-group {
	position: relative;
	.inline-block();
	font-size: 0;
	vertical-align: middle;
	white-space: nowrap;

	.btn {
		position: relative;
		font-size: @baseFontSize;
		.border-radius(0);

		+ .btn {
			margin-left: -1px;
		}

		&.mini 		{ font-size: @fontSizeMini; }
		&.small 	{ font-size: @fontSizeSmall;}
		&.large 	{ font-size: @fontSizeLarge;}

		&:first-child {
			margin-left: 0;
			.border-radius(@baseBorderRadius 0 0 @baseBorderRadius);
		}
		&:last-child {
			.border-radius(0 @baseBorderRadius @baseBorderRadius 0);
		}
		&.mini:first-child {
			margin-left: 0;
			.border-radius(@miniBorderRadius 0 0 @miniBorderRadius);
		}
		&.mini:last-child {
			.border-radius(0 @miniBorderRadius @miniBorderRadius 0);
		}
		&.small:first-child {
			margin-left: 0;
			.border-radius(@smallBorderRadius 0 0 @smallBorderRadius);
		}
		&.small:last-child {
			.border-radius(0 @smallBorderRadius @smallBorderRadius 0);
		}
		&.large:first-child {
			margin-left: 0;
			.border-radius(@largeBorderRadius 0 0 @largeBorderRadius);
		}
		&.large:last-child {
			.border-radius(0 @largeBorderRadius @largeBorderRadius 0);
		}
	}
	
	&.vertical {
		.inline-block();

		.btn {
			display: block;
			float: none;
			max-width: 100%;
			.border-radius(0);

			+ .btn {
				margin-left: 0;
				margin-top: -1px;
			}

			&:first-child {
				.border-radius(@baseBorderRadius @baseBorderRadius 0 0);
			}
			&:last-child {
				.border-radius(0 0 @baseBorderRadius @baseBorderRadius);
			}
			&.mini:first-child {
				.border-radius(@miniBorderRadius @miniBorderRadius 0 0);
			}
			&.mini:last-child {
				.border-radius(0 0 @miniBorderRadius @miniBorderRadius);
			}
			&.small:first-child {
				.border-radius(@smallBorderRadius @smallBorderRadius 0 0);
			}
			&.small:last-child {
				.border-radius(0 0 @smallBorderRadius @smallBorderRadius);
			}
			&.large:first-child {
				.border-radius(@largeBorderRadius @largeBorderRadius 0 0);
			}
			&.large:last-child {
				.border-radius(0 0 @largeBorderRadius @largeBorderRadius);
			}
		}
	}

	+ .btn-group {
		margin-left: 5px;
	}
}

// Alerts
// ------------
.alert {
	position: relative;
	padding: 8px 30px 8px 15px;
	margin-bottom: @baseLineHeight;
	color: @yellowText;
	background-color: @yellowBackground;
	border: 1px solid @yellowBorder;
	.border-radius(@baseBorderRadius);
	
	h1,h2,h3,h4,h5,h6 {
		margin: @halfLineHeight 0 0;
	}
	p {
		margin-bottom: 0;
		+ p {
			margin-top: 5px;
		}
	}
	.close {
		position: absolute;
		font-size: @fontSizeLarge;
		font-weight: bold;
		right: 10px;
		top: 5px;
		cursor: pointer;
		.user-select(none);
	}

	// Alternative colors
	&.red {
		background-color: @redBackground;
		border-color: @redBorder;
		color: @redText;
	}
	&.blue {
		background-color: @blueBackground;
		border-color: @blueBorder;
		color: @blueText;
	}
	&.green {
		background-color: @greenBackground;
		border-color: @greenBorder;
		color: @greenText;
	}	
}

// 	Navigation
// -----------------

.nav {
	margin: 0 0 @baseLineHeight;
	list-style: none;

	li > a {
		display: block;
		cursor: pointer;
		.user-select(none);

		&:hover,
		&:focus {
			text-decoration: none;
			background-color: @grayLighter;
			.transition(background-color linear 0.2s);
		}		
		
		img { max-width: none;}
	}

	// Disabled State
	.disabled > a {
		color: @grayLight !important;

		&:hover,
		&:focus {
			text-decoration: none ;
			cursor: default;
			background-color: transparent;
		}
	}


	.right {
		float: right;
	}
	
	// NAVIGATION SIDEBAR
	&.sidebar,
	&.list {
		padding-left: 15px;
		padding-right: 15px;
		margin-bottom: 0;
		
		// Navigations Header
		.header {
			font-size: @baseFontSize;
			font-weight: bold;
			text-shadow: 0 1px 0 fadeout(@white, 50%);
			text-transform: uppercase;
			line-height: @baseLineHeight;
			display: block;
			padding: 5px 15px;
			color: @grayLight;
		}
		li + .header {
			margin-top: @halfLineHeight;
		}

		.header,
		li > a {
			margin-left: -15px;
			margin-right: -15px;
			padding: 5px 15px;
		}

		.active a,
		.active a:hover,
		.active a:focus {
			color: @white;
			background-color: @linkColor;
		}

		.divider {
			overflow: hidden;
			*width: 100%;
			height: 1px;
			margin: @halfLineHeight - 1px 1px;
			*margin: -5px 0 5px;
			background-color: darken(@grayLighter, 15%);
			border-bottom: 1px solid @grayLighter;
		}

		// Alternative Colors
		&.red {
			.navSidebarColor(@red);
		}
		&.purple {
			.navSidebarColor(@purple);
		}
		&.yellow {
			.navSidebarColor(@yellow);
		}
		&.green {
			.navSidebarColor(@green);
		}
		&.black {
			.navSidebarColor(@black);
		}
	}
	
	// NAVIGATIONS TABS & TABLETS
	// ==========================
	
	// Base Style
	&.pills,
	&.tabs {
		.clearfix();

		li {
			float: left;

			a {
				padding: 10px 15px;
				margin-right: 2px;
				line-height: 14px;
			}

			&.active > a, 
			&.active > a:hover, 
			&.active > a:focus {
				cursor: default;
				color: @white;
				background-color: @linkColor;
				.box-shadow(inset 0 1px 2px darken(@linkColor, 20%));	
			} 
		}

		// Alternative Colors
		&.red {
			.navPillsTabsColor(@red);
		}
		&.purple {
			.navPillsTabsColor(@purple);
		}
		&.yellow {
			.navPillsTabsColor(@yellow);
		}
		&.green {
			.navPillsTabsColor(@green);
		}
		&.black {
			.navPillsTabsColor(@grayDark);
		}
	}

	// Pills
	&.pills > li {
		a {
			margin-top: 2px;
			margin-bottom: 2px;
			.border-radius(@baseBorderRadius);
		}
	}

	// Tabs
	&.tabs {
		border-bottom: 1px solid @linkColor;

		li > a {
			.border-radius(@baseBorderRadius @baseBorderRadius 0 0);			
		}

		// Alternative Position
		
		// Bottom
		&.below {
			border-top: 1px solid @linkColor;
			border-bottom: 0;

			li {
				margin-bottom: 0;

				a {
					.border-radius(0 0 @baseBorderRadius @baseBorderRadius);
				}
			}
		}

		// Left
		&.left {
			float: left;
			margin-right: 19px;
			border-bottom: 0;
			border-right: 1px solid @linkColor;

			> li {
				float: none;
				> a {
					min-width: 100px;
					margin-right: 0;
					margin-bottom: 3px;
					.border-radius(@baseBorderRadius 0 0 @baseBorderRadius);
				}
			}
		}

		// Right
		&.right {
			float: right;
			margin-left: 19px; 
			border-bottom: 0;
			border-left: 1px solid @linkColor;

			> li {
				float: none;
				> a {
					min-width: 100px;
					margin-left: 0;
					margin-bottom: 3px; 
					.border-radius(0 @baseBorderRadius @baseBorderRadius 0);
				}
			}
		}
	}

	// NAVIGATION STACKED
	// ==================
	&.stacked {
		li {
			float: none;

			a {
				margin-right: 0;
			}
		}
		
		&.pills > li {
			a {
				margin-bottom: 3px;
			}
			&:first-child > a {
				margin-bottom: 1px;
			}
		}

		&.tabs{
			border: 0;

			li {
				a {
					margin-bottom: -1px;
					border: 1px solid @grayLighter;
					.border-radius(0);

					&:hover,
					&:focus {
						z-index: 2;
					}
				}

				&:first-child > a {
					.border-radius(@baseBorderRadius @baseBorderRadius 0 0);
				}
				&:last-child > a {
					.border-radius(0 0 @baseBorderRadius @baseBorderRadius);					
				}
			}
		}
	}
}
	
.navbar {
	position: relative;
	z-index: 2;
	overflow: visible;
	line-height: @navbarHeight;
	height: @navbarHeight;
	margin-bottom: @baseLineHeight;
	.navbarBackground(@btnBackground, @btnBackgroundHighlight, #777, #777);
	.border-radius(@baseBorderRadius);
	
	> .container {
		.clearfix();
		.center();
     	width: (@gridColumnWidth * @gridColumns) + (@gridGutterWidth * (@gridColumns - 1));
		line-height: @navbarHeight;
		height: @navbarHeight;
	}

	.brand {
		font-size: @fontSizeLarge;
		font-weight: 400;
		line-height: @navbarHeight;
		display: block;
		float: left;
		padding: 0 20px;
		cursor: pointer;

		&:hover,
		&:focus {
			text-decoration: none;
		}
	}

	.divider {
		height: @navbarHeight;
		margin: 0 10px;
	}

	// Navigation
	.nav {
		position: relative;
		left: 0;
		display: block;
		float: left;

		> li {
			margin: 0 3px; 
			float: left;
			> a {
				font-weight: bold;
				line-height: @navbarHeight;
				text-decoration: none;
				float: none;
				padding: 0 10px;
			}

			&.active > a,
			&.active > a:hover,
			&.active > a:focus {
				text-decoration: none;
			}
		}
	}

	form {
		.clearfix();
		.inline-block();
		margin-bottom: 0;

		input,
		select,
		.btn {
			.inline-block();
			margin-bottom: 0;
		}

		input[type="checkbox"],
		input[type="image"],
		input[type="radio"] {
			margin-top: 3px;
		}

		.prepend input,
		.append input {
			margin-top: 0;
		}
	}

	&.fixed-bottom,
	&.fixed-top {
		position: fixed;
		right: 0;
		left: 0;
		z-index: @zIndexNavbar;
		margin-bottom: 0;
		padding-left: 0;
		padding-right: 0;
	}
	
	&.fixed-top {
		top: 0;
		border-width: 0 0 1px;
	}
	&.fixed-bottom {
		bottom: 0;
		border-width: 1px 0 0;
	}
	&.fixed-bottom,
	&.fixed-top,
	&.static {
		.border-radius(0);
	}

	// Alternative Colors
	&.red {
		.navbarBackground(@btnRedBackground, @btnRedBackgroundHighlight);
	}
	&.cyan {
		.navbarBackground(@btnCyanBackground, @btnCyanBackgroundHighlight);
	}
	&.blue {
		.navbarBackground(@btnBlueBackground, @btnBlueBackgroundHighlight);
	}
	&.darkblue {
		.navbarBackground(@btnDarkblueBackground, @btnDarkblueBackgroundHighlight);
	}
	&.lightblue {
		.navbarBackground(@btnLightblueBackground, @btnLightblueBackgroundHighlight);
	}
	&.purple {
		.navbarBackground(@btnPurpleBackground, @btnPurpleBackgroundHighlight);
	}
	&.yellow {
		.navbarBackground(@btnYellowBackground, @btnYellowBackgroundHighlight);
	}
	&.lime {
		.navbarBackground(@btnLimeBackground, @btnLimeBackgroundHighlight);
	}
	&.pink {
		.navbarBackground(@btnPinkBackground, @btnPinkBackgroundHighlight);
	}
	&.green {
		.navbarBackground(@btnGreenBackground, @btnGreenBackgroundHighlight);
	}
	&.olive {
		.navbarBackground(@btnOliveBackground, @btnOliveBackgroundHighlight);
	}
	&.orange {
		.navbarBackground(@btnOrangeBackground, @btnOrangeBackgroundHighlight);
	}
	&.brown {
		.navbarBackground(@btnBrownBackground, @btnBrownBackgroundHighlight);
	}
	&.maroon {
		.navbarBackground(@btnMaroonBackground, @btnMaroonBackgroundHighlight);
	}
	&.black {
		.navbarBackground(@btnBlackBackground, @btnBlackBackgroundHighlight);
	}
}


// 		Breadcrumbs
// ===========================
.breadcrumbs {
	margin: 0 0 @baseLineHeight;
	padding: 8px 15px;
	list-style: none;
	background-color: fadeout(@grayLighter, 30%);
	.border-radius(@baseBorderRadius);

	> li {
		.inline-block();
		text-shadow: 0 1px 0 @white;

		&:before {
			content: "/";
			margin: 5px;
			color: @grayLight;
		}
		&:first-child {
			margin-left: 0;

			&:before {
				display: none;
			}
		}

		&.active {
			cursor: default;
			color: @grayLight;
		}

		a {
			text-decoration: none;

			&:hover {
				text-decoration: underline;
			}
		}
	}

	&.red > li > a {
		color: @redText;
	}
	&.purple > li > a {
		color: @purpleText;
	}	
	&.yellow > li > a {
		color: @yellowText;
	}
	&.green > li > a {
		color: @greenText;
	}
	&.black > li > a {
		color: @grayDark;
	}	
}

// 				Pagination
// ============================================

.pagination {
	margin: @halfLineHeight 0;

	ul {
		.inline-block();
		margin-left: 0;
		margin-bottom: 0;
		.border-radius(@baseBorderRadius);

		> li {
			display: inline;

			> span,
			> a {
				text-decoration: none;
				text-shadow: 0 -1px 0 #DDD;
				float: left;
				padding: 5px 10px;
				line-height: @baseLineHeight;
				background-color: transparent;
				border: 1px solid #DDD;
				border-right-width: 0; 
			}
			&:first-child > span,
			&:first-child > a {
				.border-radius(@baseBorderRadius 0 0 @baseBorderRadius);
			}
			&:last-child > span,
			&:last-child > a {
				border-right-width: 1px;
				.border-radius(0 @baseBorderRadius @baseBorderRadius 0);
			}

            &.disabled > span,
			&.disabled > a,
			&.disabled > a:hover,
			&.disabled > a:focus,
			&.active > span,
			&.active > a {
				cursor: default;
				color: @grayLight;
				background-color: transparent;
			}

			&.active > span,
			&.active > a,
			> a:hover,
			> a:focus {
				background-color: @grayLighter;
				.transition(background-color linear 0.2s);
			}
		}
	}

	&.center {
		text-align: center;
	}
	&.right {
		text-align: right;
	}

	// Alternative Colors
	&.red ul > li > span,
	&.red ul > li > a {
		color: @redText;
	}
	&.purple ul > li > span,
	&.purple ul > li > a {
		color: @purpleText;
	}
	&.yellow ul > li > span,
	&.yellow ul > li > a {
		color: @yellowText;
	}
	&.green ul > li > span,
	&.green ul > li > a {
		color: @greenText;
	}
	&.black ul > li > span,
	&.black ul > li > a {
		color: @grayDark;
	}
}

